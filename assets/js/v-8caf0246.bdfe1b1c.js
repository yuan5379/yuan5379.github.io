"use strict";(self.webpackChunkdemo1=self.webpackChunkdemo1||[]).push([[6096],{7669:(s,a,n)=>{n.r(a),n.d(a,{data:()=>e});const e={key:"v-8caf0246",path:"/%E5%B0%8F%E7%A8%8B%E5%BA%8F/2022/20220831.html",title:"微信小程序在scroll-view标签内不能正常使用超过多行显示省略号",lang:"zh-CN",frontmatter:{title:"微信小程序在scroll-view标签内不能正常使用超过多行显示省略号",date:"2022-08-31T00:00:00.000Z",tags:["小程序"],categories:["小程序"]},excerpt:"",headers:[],git:{updatedTime:null,contributors:[]}}},6857:(s,a,n)=>{n.r(a),n.d(a,{default:()=>t});const e=(0,n(6252).uE)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>我们在开发小程序时，很多时候需要使用 scroll-view 标签，那么不可避免的要处理多行文本超出显示省略号</p></div><h1 id="代码展示" tabindex="-1"><a class="header-anchor" href="#代码展示" aria-hidden="true">#</a> 代码展示</h1><p>原因是：scroll-view 为了能够横向滚动需要设置 white-space: nowrap (文本不会换行，文本会在在同一行上继续，直到遇到标签为止。) 解决方案：给需要实现多行文本的元素设置white-space：normal</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 实现多行文本代码</span>\n    <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token operator">-</span>webkit<span class="token operator">-</span>box<span class="token punctuation">;</span>\n    <span class="token operator">-</span>webkit<span class="token operator">-</span>box<span class="token operator">-</span>orient<span class="token operator">:</span> vertical<span class="token punctuation">;</span>\n    <span class="token operator">-</span>webkit<span class="token operator">-</span>line<span class="token operator">-</span>clamp<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 2行</span>\n    <span class="token literal-property property">overflow</span><span class="token operator">:</span> hidden<span class="token punctuation">;</span>\n    word<span class="token operator">-</span><span class="token keyword">break</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token operator">-</span>all<span class="token punctuation">;</span>\n    text<span class="token operator">-</span>overflow<span class="token operator">:</span> ellipsis\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',4),p={},t=(0,n(3744).Z)(p,[["render",function(s,a){return e}]])}}]);