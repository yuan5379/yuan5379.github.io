"use strict";(self.webpackChunkdemo1=self.webpackChunkdemo1||[]).push([[683],{6657:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-7ee8eb88",path:"/js/2021/20220718.html",title:"将数据处理成树形结构的数据",lang:"zh-CN",frontmatter:{title:"将数据处理成树形结构的数据",date:"2022-07-18T00:00:00.000Z",tags:["算法"],categories:["js"]},excerpt:"",headers:[{level:2,title:"js处理方法",slug:"js处理方法",children:[]}],git:{updatedTime:null,contributors:[]}}},5429:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<p>案例环境为vue2，不过主要是 js 方面，所以问题不大</p><h2 id="js处理方法" tabindex="-1"><a class="header-anchor" href="#js处理方法" aria-hidden="true">#</a> js处理方法</h2><p>后端返回的数据类型：</p><ol><li>为Array[object]类型，一个数组每一项是个对象</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 发送请求给后端，后端返回数据</span>\n<span class="token comment">// res.dept_list:我们需要转换的数据</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getDeptTree</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">getDeptListApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">listToTree</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>dept_list <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;deptId&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token string">&#39;parentId&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 转换函数</span>\n<span class="token comment">// 如果不需要排列可以将 sort 这个函数去掉</span>\n<span class="token comment">// parentId：对应父级的id </span>\n<span class="token comment">// parentIp：需要放在根目录的节点对应的id</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">listToTree</span> <span class="token punctuation">(</span>\n  list<span class="token punctuation">,</span>\n  parentIp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> parentId <span class="token operator">=</span> <span class="token string">&#39;parentId&#39;</span><span class="token punctuation">,</span> id <span class="token operator">=</span> <span class="token string">&#39;id&#39;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token string">&#39;parentId&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>orderNum <span class="token operator">-</span> b<span class="token punctuation">.</span>orderNum<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">[</span>parentId<span class="token punctuation">]</span> <span class="token operator">===</span> parentIp<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token operator">...</span>item<span class="token punctuation">,</span>\n      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token function">listToTree</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> item<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> parentId<span class="token punctuation">,</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>',5),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])}}]);