"use strict";(self.webpackChunkdemo1=self.webpackChunkdemo1||[]).push([[955],{4274:(i,t,e)=>{e.r(t),e.d(t,{data:()=>a});const a={key:"v-a4ce4834",path:"/vue/2022/20220325.html",title:"尤雨溪强势推荐的Pinia",lang:"zh-CN",frontmatter:{title:"尤雨溪强势推荐的Pinia",date:"2022-03-25T00:00:00.000Z",tags:["vue"],categories:["vue"]},excerpt:"",headers:[{level:2,title:"Pinia 基本使用",slug:"pinia-基本使用",children:[]},{level:2,title:"解构store",slug:"解构store",children:[{level:3,title:"ES传统方式解构(能获取到值，但是不具有响应性)",slug:"es传统方式解构-能获取到值-但是不具有响应性",children:[]},{level:3,title:"Pinia解构方法：storeToRefs",slug:"pinia解构方法-storetorefs",children:[]}]},{level:2,title:"Pinia修改数据状态",slug:"pinia修改数据状态",children:[{level:3,title:"简单数据修改",slug:"简单数据修改",children:[]},{level:3,title:"多条数据修改",slug:"多条数据修改",children:[]},{level:3,title:"通过action修改",slug:"通过action修改",children:[]}]},{level:2,title:"Pinia中的Getters",slug:"pinia中的getters",children:[]},{level:2,title:"store之间的相互调用",slug:"store之间的相互调用",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],git:{updatedTime:null,contributors:[]}}},806:(i,t,e)=>{e.r(t),e.d(t,{default:()=>L});var a=e(6252);const o=(0,a.uE)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Pinia是一个全新的Vue状态管理库，是Vuex的代替者，尤雨溪强势推荐</p><ol><li>Vue2 和 Vue3 都能支持</li><li>抛弃传统的 <code>Mutation</code> ，只有 <code>state, getter</code> 和 <code>action</code> ，简化状态管理库</li><li>不需要嵌套模块，符合 Vue3 的 Composition api，让代码扁平化</li><li>TypeScript支持</li><li>代码简介，很好的代码自动分割</li></ol></div><h2 id="pinia-基本使用" tabindex="-1"><a class="header-anchor" href="#pinia-基本使用" aria-hidden="true">#</a> Pinia 基本使用</h2><p><strong>初始化项目：</strong> <code>npm init vite@latest</code></p><p><strong>安装Pinia:</strong> <code>npm i pinia</code></p><p><strong>挂载Pinia</strong></p>',5),l=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"全局挂载Pinia",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8c8d5e3fde9b40c49963bff8bb80cb66~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),c=(0,a._)("p",null,[(0,a._)("strong",null,"创建Store")],-1),n=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-创建store",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/150f6a3d42994269b5125270992b4801~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),p=(0,a._)("p",null,[(0,a._)("strong",null,"使用Store")],-1),r=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-使用Store",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/620b9847427f4732a3dcdcd7d70be862~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),s=(0,a._)("h2",{id:"解构store",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#解构store","aria-hidden":"true"},"#"),(0,a.Uk)(" 解构store")],-1),u=(0,a._)("p",null,"当store中的多个参数需要被使用到的时候，为了更简洁的使用这些变量，我们通常采用结构的方式一次性获取所有的变量名",-1),d=(0,a._)("h3",{id:"es传统方式解构-能获取到值-但是不具有响应性",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#es传统方式解构-能获取到值-但是不具有响应性","aria-hidden":"true"},"#"),(0,a.Uk)(" ES传统方式解构(能获取到值，但是不具有响应性)")],-1),b=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-ES传统方式解构Store",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f080f0d53a054a67b54878d3d0791f2d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),g=(0,a._)("h3",{id:"pinia解构方法-storetorefs",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#pinia解构方法-storetorefs","aria-hidden":"true"},"#"),(0,a.Uk)(" Pinia解构方法：storeToRefs")],-1),f=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-storeToRefs解构Store",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/821275676927405188b9be39b05806c8~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),h=(0,a._)("h2",{id:"pinia修改数据状态",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#pinia修改数据状态","aria-hidden":"true"},"#"),(0,a.Uk)(" Pinia修改数据状态")],-1),m=(0,a._)("h3",{id:"简单数据修改",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#简单数据修改","aria-hidden":"true"},"#"),(0,a.Uk)(" 简单数据修改")],-1),_=(0,a._)("p",null,[(0,a.Uk)("简单数据直接通过在方法中操作 "),(0,a._)("code",null,"store.属性名"),(0,a.Uk)(" 来修改")],-1),k=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-简单数据修改",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6d5c183112c5482db4cf6ee0bd181d5b~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),v=(0,a.uE)('<h3 id="多条数据修改" tabindex="-1"><a class="header-anchor" href="#多条数据修改" aria-hidden="true">#</a> 多条数据修改</h3><p>通过基础数据修改方式去修改多条数据也是可行的，但是在 <code>pinia</code> 官网中，已经明确表示<code>$patch</code> 的方式是经过优化的，会加快修改速度，对性能有很大好处，所以在进行多条数据修改的时候，更推荐使用 <code>$patch</code></p><p><code>$patch</code> 方法可以接受两个类型的参数，函数 和 对象</p><ul><li><strong>$patch + 对象</strong></li><li><strong>$patch + 函数：</strong> 通过函数方式去使用的时候，函数接受一个 state 的参数，state 就是 store 仓库中的 state</li></ul>',4),z=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-多条数据修改",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cd7ff1a198d04b179562d51b95f296da~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),j=(0,a._)("h3",{id:"通过action修改",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#通过action修改","aria-hidden":"true"},"#"),(0,a.Uk)(" 通过action修改")],-1),y=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Store.actions中添加 "),(0,a._)("code",null,"changeState"),(0,a.Uk)(" 方法")]),(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-多条数据修改action_store",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c5040c61df2b43798aae25663fb471a6~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})])]),(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("组件方法调用 "),(0,a._)("code",null,"store.方法名")]),(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-多条数据修改action_components",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/158c352fbfba40bb8284480d01b6af19~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})])])],-1),S=(0,a._)("h2",{id:"pinia中的getters",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#pinia中的getters","aria-hidden":"true"},"#"),(0,a.Uk)(" Pinia中的Getters")],-1),w=(0,a._)("p",null,"Pinia 中的 getter 和 Vue 中的计算属性几乎一样，在获取 State值之前做一些逻辑处理",-1),P=(0,a._)("ol",null,[(0,a._)("li",null,[(0,a._)("p",null,"getter 中的值有缓存特性，如果值没有改变，多次使用也只会调用一次"),(0,a._)("ul",null,[(0,a._)("li",null,"添加 getter方法")]),(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-添加getter",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d0d1fa3b3d3c4d248e7840daab479598~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})]),(0,a._)("ul",null,[(0,a._)("li",null,"组件内多次调用")]),(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-getter基本使用",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c3dfc0ffba6c48448c1e1fc24ecac234~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})]),(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20220313194548932",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2d890aff47884bb69a9709562740e87d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})])]),(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("getter 中不仅可以传递 "),(0,a._)("code",null,"state"),(0,a.Uk)(" 直接改变数据状态，还可以使用 "),(0,a._)("code",null,"this"),(0,a.Uk)(" 来改变数据")]),(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-this方式添加getter",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e6d2dcd2a6664e959c4090af96155a24~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})])])],-1),U=(0,a.uE)('<h2 id="store之间的相互调用" tabindex="-1"><a class="header-anchor" href="#store之间的相互调用" aria-hidden="true">#</a> store之间的相互调用</h2><p>在 Pinia 中，可以在一个 <code>store</code> 中 <code>import</code> 另外一个 <code>store</code> ，然后通过调用引入 store 方法的形式，获取引入 <code>store</code> 的状态</p><ul><li>新建 store</li></ul>',3),x=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-新建store",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c9eef2dddc64924b0f60c90160f2abb~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),V=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Uk)("在原 store 中引入 allanStore，并获取 "),(0,a._)("code",null,"moveList")])],-1),T=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"pinia-store互相引用",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/effd4216b8a24d01814bb80af2d2a515~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),E=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Uk)("组件中使用 "),(0,a._)("code",null,"mainStore.getAllanStoreList")])],-1),C=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20220313201156248",originSrc:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/14d33eb3fede4f1297e8debf1715e223~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",data:"aurora"})],-1),$=(0,a._)("h2",{id:"总结",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),(0,a.Uk)(" 总结")],-1),R=(0,a._)("p",null,"总得来说，Pinia 就是 Vuex 的替代版，可以更好的兼容 Vue2，Vue3以及TypeScript。在Vuex的基础上去掉了 Mutation，只保留了 state, getter和action。Pinia拥有更简洁的语法， 扁平化的代码编排，符合Vue3 的 Composition api",-1),G={},L=(0,e(3744).Z)(G,[["render",function(i,t){return(0,a.wg)(),(0,a.iD)(a.HY,null,[o,l,c,n,p,r,s,u,d,b,g,f,h,m,_,k,v,z,j,y,S,w,P,U,x,V,T,E,C,$,R],64)}]])}}]);