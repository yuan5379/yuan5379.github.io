"use strict";(self.webpackChunkdemo1=self.webpackChunkdemo1||[]).push([[1447],{8147:(s,n,a)=>{a.r(n),a.d(n,{data:()=>p});const p={key:"v-59b6cb7e",path:"/%E5%B7%A5%E5%85%B7/2023/20230501.html",title:"PostCSS 插件",lang:"zh-CN",frontmatter:{title:"PostCSS 插件",date:"2023-05-01T00:00:00.000Z",tags:["工具"],categories:["工具"]},excerpt:"",headers:[{level:2,title:"使用步骤",slug:"使用步骤",children:[]}],git:{updatedTime:null,contributors:[]}}},8236:(s,n,a)=>{a.r(n),a.d(n,{default:()=>k});var p=a(6252);const e={class:"custom-container tip"},t=(0,p._)("p",{class:"custom-container-title"},"TIP",-1),o=(0,p.Uk)("开发大屏或移动端项目中，不可避免的需要响应式布局，"),r={href:"https://github.com/evrone/postcss-px-to-viewport",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Uk)("postcss-px-to-viewport"),c=(0,p.Uk)(" 是一款 PostCSS 插件，用于将 px 单位转化为 vw/vh 单位，但最近使用 postcss-px-to-viewport-update 替换 postcss-px-to-viewport 原因：https://github.com/evrone/postcss-px-to-viewport/issues/53"),i=(0,p.uE)('<h2 id="使用步骤" tabindex="-1"><a class="header-anchor" href="#使用步骤" aria-hidden="true">#</a> 使用步骤</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm install postcss<span class="token operator">-</span>px<span class="token operator">-</span>to<span class="token operator">-</span>viewport<span class="token operator">-</span>update\n<span class="token comment">// yarn</span>\nyarn add <span class="token operator">-</span><span class="token constant">D</span> postcss<span class="token operator">-</span>px<span class="token operator">-</span>to<span class="token operator">-</span>viewport<span class="token operator">-</span>update\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// vite创建的项目 vite.config.js</span>\n\n<span class="token comment">// 引入包</span>\n<span class="token keyword">import</span> postcsspxtoviewport <span class="token keyword">from</span> <span class="token string">&#39;postcss-px-to-viewport-update&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> mode <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n    <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token operator">...</span>\n      <span class="token literal-property property">postcss</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token function">postcsspxtoviewport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">unitToConvert</span><span class="token operator">:</span> <span class="token string">&#39;rpx&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 要转化的单位</span>\n            <span class="token literal-property property">viewportWidth</span><span class="token operator">:</span> <span class="token number">1080</span><span class="token punctuation">,</span> <span class="token comment">// UI设计稿的宽度</span>\n            <span class="token literal-property property">unitPrecision</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 转换后的精度，即小数点位数</span>\n            <span class="token literal-property property">propList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换</span>\n            <span class="token literal-property property">viewportUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定需要转换成的视窗单位，默认vw</span>\n            <span class="token literal-property property">fontViewportUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定字体需要转换成的视窗单位，默认vw</span>\n            <span class="token literal-property property">selectorBlackList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;ignore-&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定不转换为视窗单位的类名，</span>\n            <span class="token literal-property property">minPixelValue</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 默认值1，小于或等于1px则不进行转换</span>\n            <span class="token literal-property property">mediaQuery</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否在媒体查询的css代码中也进行转换，默认false</span>\n            <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否转换后直接更换属性值</span>\n            <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 设置忽略文件，用正则做目录名匹配</span>\n            <span class="token literal-property property">landscape</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 是否处理横屏情况</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// vue脚手架创建的  在 postcss.config.js 文件 （如果没有该文件则创建一个）</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&#39;postcss-px-to-viewport-update&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">unitToConvert</span><span class="token operator">:</span> <span class="token string">&#39;rpx&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 要转化的单位</span>\n      <span class="token literal-property property">viewportWidth</span><span class="token operator">:</span> <span class="token number">1080</span><span class="token punctuation">,</span> <span class="token comment">// UI设计稿的宽度</span>\n      <span class="token literal-property property">unitPrecision</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 转换后的精度，即小数点位数</span>\n      <span class="token literal-property property">propList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换</span>\n      <span class="token literal-property property">viewportUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定需要转换成的视窗单位，默认vw</span>\n      <span class="token literal-property property">fontViewportUnit</span><span class="token operator">:</span> <span class="token string">&#39;vw&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定字体需要转换成的视窗单位，默认vw</span>\n      <span class="token literal-property property">selectorBlackList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;ignore-&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定不转换为视窗单位的类名，</span>\n      <span class="token literal-property property">minPixelValue</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 默认值1，小于或等于1px则不进行转换</span>\n      <span class="token literal-property property">mediaQuery</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否在媒体查询的css代码中也进行转换，默认false</span>\n      <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否转换后直接更换属性值</span>\n      <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 设置忽略文件，用正则做目录名匹配</span>\n      <span class="token literal-property property">landscape</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 是否处理横屏情况</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>',4),u={},k=(0,a(3744).Z)(u,[["render",function(s,n){const a=(0,p.up)("ExternalLinkIcon");return(0,p.wg)(),(0,p.iD)(p.HY,null,[(0,p._)("div",e,[t,(0,p._)("p",null,[o,(0,p._)("a",r,[l,(0,p.Wm)(a)]),c])]),i],64)}]])}}]);